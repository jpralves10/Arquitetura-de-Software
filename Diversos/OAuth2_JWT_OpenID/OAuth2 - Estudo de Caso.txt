*** OAuth2 - Estudo de Caso ***


* Wesley o dono de uma conta bancária 
* A mariana ela é esposa do Wesley
* A gente tem também um camarada chamado Davi que é o gerente da conta bancária do Wesley
* E para fecharmos a gente tem a sara que trabalha no cartório

1. um belo dia Wesley pede para mariana a sua esposa ir até o banco e fazer uma transferência da conta bancária dele para construtora a qual eles acabaram de comprar uma casa novinha

2. ao chega no banco a mariana pede ao Davi o gerente da conta bancária para realizar a transferência 

3. naquele momento o Davi percebe que a conta tá apenas no nome do Wesley logo ela não tem autorização para fazer essa transferência

4. nesse caso ele recomenda a mariana que vá a um cartório pegar uma procuração para que ela possa realizar essa transferência em nome do Wesley 

5. então a mariana vai no cartório com Wesley e eles pegam uma procuração para que a mariana possa realizar essa transferência 

6. então a mariana agora com procuração vai novamente ao banco e pede para o gerente realizar a transferência 

7. imediatamente o gerente pede a procuração e a mariana entrega essa procuração 

8. e para garantir que a procuração de fato é válida o gerente verifica no sistema do cartório se aquela procuração realmente tem validade 

9. agora que a procuração foi validada, então autorização para mariana realizar a transferência bancária e faz a seguinte observação 

10. olha essa procuração é válida apenas por um mês logo fique atenta a essa data porque depois disso você terá que pegar uma nova procuração no cartório 

OBS: perceba essa história que acabamos de ver algo totalmente comum em nosso dia a dia em todos os sentidos desde pegar uma simples procuração no cartório até você por exemplo utilizar uma app que da acesso a sua agenda de contatos, no final das contas o que está acontecendo é um processo de delegação de responsabilidade 

Delegação de Responsabilidade: é um processo de autorização temporária a um recurso de um terceiro, e se tivéssemos que transpor esses personagens a um fluxo de autorização como acabamos de ver teríamos que:

- Wesley ele é um <Resource Owner>, ou seja, o dono do recurso. 
- A mariana seria o <Client>, aquele que quer ter autorização para acessar o recurso. 
- Teríamos também o Davi o gerente do banco que nesse caso é o nosso <Resources Server> ou seja o local aonde os dados daquele recurso estão armazenados. 
- E por último o cartório, que nesse caso ele faz parte do nosso <Authorization Server>. 



OAuth2 é um framework de autorização que permite que aplicações terceiras possam ter acesso limitado a um serviço http. Muito importante para a gente observar é que o OAuth2 ele é um framework de autorização e não de autenticação. E agora vem aquela pergunta que não quer calar, como que a gente poderia aproveitar todo esse fluxo para que a gente pudesse também realizar um processo de autenticação? A resposta para isso é o famoso OpenID que é uma camada que fica no topo do OAuth2, que permite que os clientes eles possam verificar a identidade de um usuário final através do processo de autenticação por um servidor de autorização. 

Apesar de haver diversas variações do fluxo do OpenID Connection, os mesmos eles são muito parecidos. basicamente a ideia é a seguinte:

1. Vamos imaginar que a gente tem uma Single Page Application que a gente deseja realizar o processo de login, nesse caso quando a gente vai iniciar o processo, a SPA ela faz uma chamada para o servidor de autenticação.

2. Nesse servidor automaticamente redireciona o usuário para uma tela de login para que esse usuário ele entre com as suas credenciais, ali no caso login e-mail e etc. 

3. Ao realizar o login e ele ter sido validado pelo servidor o mesmo enviará para SPA um código de autorização. 

4. Com esse código em mãos a SPA envia esse código de volta para o servidor de autenticação solicitando a troca desse código por um <access token> e também por um <ID Token>, com esses tokens em mãos agora a SPA poderá trabalhar de forma totalmente autenticada.

5. Nosso caso onde o nosso principal objetivo é autenticação o token que nos interessa é o <ID Token> que possuía as informações básicas do usuário como ID ou mesmo e-mail que nos dá no final das contas clareza de qual usuário estamos falando ou seja qual usuário está autenticado no nosso sistema.

6. Esse <ID Token> ele é um JWT, ou seja, um JSON web token que nos permite informar com segurança os dados do usuário de forma assinada pelo servidor de autenticação para evitar qualquer tipo de fraude.

7. Apesar de todo esse fluxo parecer burocrático e de certa forma é, já existem servidores de autenticação e autorização que fazem esse trabalho de uma forma fantástica para gente e um desses caras é o poderoso Keycloak, que é um projeto Open Source e extremamente consolidado no mercado que possui uma gama de recursos para que a gente possa trabalhar com autenticação autorização utilizando o OAuth2 e OpenID-Connect e outros protocolos como o SAML e também outros processos de autenticação federados utilizando LDAP entre outros. 
